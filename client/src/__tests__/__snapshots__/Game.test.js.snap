// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Game /> renders 1 <Game /> component 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Game />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ForwardRef(Bootstrap(Container))
        className="center"
      >
        <ForwardRef(Bootstrap(Row))
          className="justify-content-center"
          style={
            Object {
              "marginTop": 5,
            }
          }
        >
          <h1
            style={
              Object {
                "color": "red",
              }
            }
          >
            GoD
          </h1>
          <h1
            style={
              Object {
                "color": "white",
              }
            }
          >
            | Game of Drones
          </h1>
          <div
            style={
              Object {
                "padding": 5,
              }
            }
          >
            <SettingsButton
              handleSettingsClick={[Function]}
            />
          </div>
        </ForwardRef(Bootstrap(Row))>
        <ForwardRef(Bootstrap(Row))
          className="justify-content-center"
        >
          <h2
            style={
              Object {
                "color": "white",
              }
            }
          >
            Welcome players
          </h2>
        </ForwardRef(Bootstrap(Row))>
        <ForwardRef(Bootstrap(Row))
          className="justify-content-center"
        >
          <h3
            style={
              Object {
                "color": "white",
              }
            }
          >
            Enter Player's Names or choose one of the list
          </h3>
        </ForwardRef(Bootstrap(Row))>
        <ForwardRef(Bootstrap(Row))
          className="justify-content-center"
        >
          <NewUsers
            handleLoadUsers={[Function]}
            handleUserChange={[Function]}
            numOfPlayers={5}
            user1=""
            user2=""
          />
        </ForwardRef(Bootstrap(Row))>
        <ForwardRef(Bootstrap(Row))
          className="justify-content-center mt-2"
        >
          <ForwardRef(Bootstrap(Button))
            onClick={[Function]}
          >
            Start Battle
          </ForwardRef(Bootstrap(Button))>
        </ForwardRef(Bootstrap(Row))>
        <ForwardRef(Bootstrap(Modal))
          centered={true}
          onHide={[Function]}
          show={false}
        >
          <ForwardRef(Bootstrap(ModalHeader))>
            <ForwardRef(Bootstrap(ModalTitle))>
              Undefined Players
            </ForwardRef(Bootstrap(ModalTitle))>
          </ForwardRef(Bootstrap(ModalHeader))>
          <ForwardRef(Bootstrap(ModalBody))>
            Please fill out both player's names or check that they aren't the same.
             
          </ForwardRef(Bootstrap(ModalBody))>
          <ForwardRef(Bootstrap(ModalFooter))>
            <ForwardRef(Bootstrap(Button))
              onClick={[Function]}
              variant="primary"
            >
              Ok
            </ForwardRef(Bootstrap(Button))>
          </ForwardRef(Bootstrap(ModalFooter))>
        </ForwardRef(Bootstrap(Modal))>
      </ForwardRef(Bootstrap(Container))>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef(Bootstrap(Row))
            className="justify-content-center"
            style={
              Object {
                "marginTop": 5,
              }
            }
          >
            <h1
              style={
                Object {
                  "color": "red",
                }
              }
            >
              GoD
            </h1>
            <h1
              style={
                Object {
                  "color": "white",
                }
              }
            >
              | Game of Drones
            </h1>
            <div
              style={
                Object {
                  "padding": 5,
                }
              }
            >
              <SettingsButton
                handleSettingsClick={[Function]}
              />
            </div>
          </ForwardRef(Bootstrap(Row))>,
          <ForwardRef(Bootstrap(Row))
            className="justify-content-center"
          >
            <h2
              style={
                Object {
                  "color": "white",
                }
              }
            >
              Welcome players
            </h2>
          </ForwardRef(Bootstrap(Row))>,
          <ForwardRef(Bootstrap(Row))
            className="justify-content-center"
          >
            <h3
              style={
                Object {
                  "color": "white",
                }
              }
            >
              Enter Player's Names or choose one of the list
            </h3>
          </ForwardRef(Bootstrap(Row))>,
          <ForwardRef(Bootstrap(Row))
            className="justify-content-center"
          >
            <NewUsers
              handleLoadUsers={[Function]}
              handleUserChange={[Function]}
              numOfPlayers={5}
              user1=""
              user2=""
            />
          </ForwardRef(Bootstrap(Row))>,
          <ForwardRef(Bootstrap(Row))
            className="justify-content-center mt-2"
          >
            <ForwardRef(Bootstrap(Button))
              onClick={[Function]}
            >
              Start Battle
            </ForwardRef(Bootstrap(Button))>
          </ForwardRef(Bootstrap(Row))>,
          <ForwardRef(Bootstrap(Modal))
            centered={true}
            onHide={[Function]}
            show={false}
          >
            <ForwardRef(Bootstrap(ModalHeader))>
              <ForwardRef(Bootstrap(ModalTitle))>
                Undefined Players
              </ForwardRef(Bootstrap(ModalTitle))>
            </ForwardRef(Bootstrap(ModalHeader))>
            <ForwardRef(Bootstrap(ModalBody))>
              Please fill out both player's names or check that they aren't the same.
               
            </ForwardRef(Bootstrap(ModalBody))>
            <ForwardRef(Bootstrap(ModalFooter))>
              <ForwardRef(Bootstrap(Button))
                onClick={[Function]}
                variant="primary"
              >
                Ok
              </ForwardRef(Bootstrap(Button))>
            </ForwardRef(Bootstrap(ModalFooter))>
          </ForwardRef(Bootstrap(Modal))>,
        ],
        "className": "center",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <h1
                style={
                  Object {
                    "color": "red",
                  }
                }
              >
                GoD
              </h1>,
              <h1
                style={
                  Object {
                    "color": "white",
                  }
                }
              >
                | Game of Drones
              </h1>,
              <div
                style={
                  Object {
                    "padding": 5,
                  }
                }
              >
                <SettingsButton
                  handleSettingsClick={[Function]}
                />
              </div>,
            ],
            "className": "justify-content-center",
            "style": Object {
              "marginTop": 5,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "GoD",
                "style": Object {
                  "color": "red",
                },
              },
              "ref": null,
              "rendered": "GoD",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "| Game of Drones",
                "style": Object {
                  "color": "white",
                },
              },
              "ref": null,
              "rendered": "| Game of Drones",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <SettingsButton
                  handleSettingsClick={[Function]}
                />,
                "style": Object {
                  "padding": 5,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "handleSettingsClick": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "propTypes": undefined,
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <h2
              style={
                Object {
                  "color": "white",
                }
              }
            >
              Welcome players
            </h2>,
            "className": "justify-content-center",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Welcome players",
              "style": Object {
                "color": "white",
              },
            },
            "ref": null,
            "rendered": "Welcome players",
            "type": "h2",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "propTypes": undefined,
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <h3
              style={
                Object {
                  "color": "white",
                }
              }
            >
              Enter Player's Names or choose one of the list
            </h3>,
            "className": "justify-content-center",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Enter Player's Names or choose one of the list",
              "style": Object {
                "color": "white",
              },
            },
            "ref": null,
            "rendered": "Enter Player's Names or choose one of the list",
            "type": "h3",
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "propTypes": undefined,
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <NewUsers
              handleLoadUsers={[Function]}
              handleUserChange={[Function]}
              numOfPlayers={5}
              user1=""
              user2=""
            />,
            "className": "justify-content-center",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "handleLoadUsers": [Function],
              "handleUserChange": [Function],
              "numOfPlayers": 5,
              "user1": "",
              "user2": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "propTypes": undefined,
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef(Bootstrap(Button))
              onClick={[Function]}
            >
              Start Battle
            </ForwardRef(Bootstrap(Button))>,
            "className": "justify-content-center mt-2",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Start Battle",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Start Battle",
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
          },
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": undefined,
            "propTypes": undefined,
            "render": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "centered": true,
            "children": Array [
              <ForwardRef(Bootstrap(ModalHeader))>
                <ForwardRef(Bootstrap(ModalTitle))>
                  Undefined Players
                </ForwardRef(Bootstrap(ModalTitle))>
              </ForwardRef(Bootstrap(ModalHeader))>,
              <ForwardRef(Bootstrap(ModalBody))>
                Please fill out both player's names or check that they aren't the same.
                 
              </ForwardRef(Bootstrap(ModalBody))>,
              <ForwardRef(Bootstrap(ModalFooter))>
                <ForwardRef(Bootstrap(Button))
                  onClick={[Function]}
                  variant="primary"
                >
                  Ok
                </ForwardRef(Bootstrap(Button))>
              </ForwardRef(Bootstrap(ModalFooter))>,
            ],
            "onHide": [Function],
            "show": false,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef(Bootstrap(ModalTitle))>
                  Undefined Players
                </ForwardRef(Bootstrap(ModalTitle))>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Undefined Players",
                },
                "ref": null,
                "rendered": "Undefined Players",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": undefined,
                  "propTypes": undefined,
                  "render": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  "Please fill out both player's names or check that they aren't the same.",
                  " ",
                ],
              },
              "ref": null,
              "rendered": Array [
                "Please fill out both player's names or check that they aren't the same.",
                " ",
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef(Bootstrap(Button))
                  onClick={[Function]}
                  variant="primary"
                >
                  Ok
                </ForwardRef(Bootstrap(Button))>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Ok",
                  "onClick": [Function],
                  "variant": "primary",
                },
                "ref": null,
                "rendered": "Ok",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": undefined,
                  "propTypes": undefined,
                  "render": [Function],
                },
              },
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "BACKDROP_TRANSITION_DURATION": 150,
            "Body": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
            "Dialog": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
            "Footer": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
            "Header": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
            "TRANSITION_DURATION": 300,
            "Title": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
            "defaultProps": undefined,
            "propTypes": undefined,
            "render": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": undefined,
        "propTypes": undefined,
        "render": [Function],
      },
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ForwardRef(Bootstrap(Container))
          className="center"
        >
          <ForwardRef(Bootstrap(Row))
            className="justify-content-center"
            style={
              Object {
                "marginTop": 5,
              }
            }
          >
            <h1
              style={
                Object {
                  "color": "red",
                }
              }
            >
              GoD
            </h1>
            <h1
              style={
                Object {
                  "color": "white",
                }
              }
            >
              | Game of Drones
            </h1>
            <div
              style={
                Object {
                  "padding": 5,
                }
              }
            >
              <SettingsButton
                handleSettingsClick={[Function]}
              />
            </div>
          </ForwardRef(Bootstrap(Row))>
          <ForwardRef(Bootstrap(Row))
            className="justify-content-center"
          >
            <h2
              style={
                Object {
                  "color": "white",
                }
              }
            >
              Welcome players
            </h2>
          </ForwardRef(Bootstrap(Row))>
          <ForwardRef(Bootstrap(Row))
            className="justify-content-center"
          >
            <h3
              style={
                Object {
                  "color": "white",
                }
              }
            >
              Enter Player's Names or choose one of the list
            </h3>
          </ForwardRef(Bootstrap(Row))>
          <ForwardRef(Bootstrap(Row))
            className="justify-content-center"
          >
            <NewUsers
              handleLoadUsers={[Function]}
              handleUserChange={[Function]}
              numOfPlayers={5}
              user1=""
              user2=""
            />
          </ForwardRef(Bootstrap(Row))>
          <ForwardRef(Bootstrap(Row))
            className="justify-content-center mt-2"
          >
            <ForwardRef(Bootstrap(Button))
              onClick={[Function]}
            >
              Start Battle
            </ForwardRef(Bootstrap(Button))>
          </ForwardRef(Bootstrap(Row))>
          <ForwardRef(Bootstrap(Modal))
            centered={true}
            onHide={[Function]}
            show={false}
          >
            <ForwardRef(Bootstrap(ModalHeader))>
              <ForwardRef(Bootstrap(ModalTitle))>
                Undefined Players
              </ForwardRef(Bootstrap(ModalTitle))>
            </ForwardRef(Bootstrap(ModalHeader))>
            <ForwardRef(Bootstrap(ModalBody))>
              Please fill out both player's names or check that they aren't the same.
               
            </ForwardRef(Bootstrap(ModalBody))>
            <ForwardRef(Bootstrap(ModalFooter))>
              <ForwardRef(Bootstrap(Button))
                onClick={[Function]}
                variant="primary"
              >
                Ok
              </ForwardRef(Bootstrap(Button))>
            </ForwardRef(Bootstrap(ModalFooter))>
          </ForwardRef(Bootstrap(Modal))>
        </ForwardRef(Bootstrap(Container))>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef(Bootstrap(Row))
              className="justify-content-center"
              style={
                Object {
                  "marginTop": 5,
                }
              }
            >
              <h1
                style={
                  Object {
                    "color": "red",
                  }
                }
              >
                GoD
              </h1>
              <h1
                style={
                  Object {
                    "color": "white",
                  }
                }
              >
                | Game of Drones
              </h1>
              <div
                style={
                  Object {
                    "padding": 5,
                  }
                }
              >
                <SettingsButton
                  handleSettingsClick={[Function]}
                />
              </div>
            </ForwardRef(Bootstrap(Row))>,
            <ForwardRef(Bootstrap(Row))
              className="justify-content-center"
            >
              <h2
                style={
                  Object {
                    "color": "white",
                  }
                }
              >
                Welcome players
              </h2>
            </ForwardRef(Bootstrap(Row))>,
            <ForwardRef(Bootstrap(Row))
              className="justify-content-center"
            >
              <h3
                style={
                  Object {
                    "color": "white",
                  }
                }
              >
                Enter Player's Names or choose one of the list
              </h3>
            </ForwardRef(Bootstrap(Row))>,
            <ForwardRef(Bootstrap(Row))
              className="justify-content-center"
            >
              <NewUsers
                handleLoadUsers={[Function]}
                handleUserChange={[Function]}
                numOfPlayers={5}
                user1=""
                user2=""
              />
            </ForwardRef(Bootstrap(Row))>,
            <ForwardRef(Bootstrap(Row))
              className="justify-content-center mt-2"
            >
              <ForwardRef(Bootstrap(Button))
                onClick={[Function]}
              >
                Start Battle
              </ForwardRef(Bootstrap(Button))>
            </ForwardRef(Bootstrap(Row))>,
            <ForwardRef(Bootstrap(Modal))
              centered={true}
              onHide={[Function]}
              show={false}
            >
              <ForwardRef(Bootstrap(ModalHeader))>
                <ForwardRef(Bootstrap(ModalTitle))>
                  Undefined Players
                </ForwardRef(Bootstrap(ModalTitle))>
              </ForwardRef(Bootstrap(ModalHeader))>
              <ForwardRef(Bootstrap(ModalBody))>
                Please fill out both player's names or check that they aren't the same.
                 
              </ForwardRef(Bootstrap(ModalBody))>
              <ForwardRef(Bootstrap(ModalFooter))>
                <ForwardRef(Bootstrap(Button))
                  onClick={[Function]}
                  variant="primary"
                >
                  Ok
                </ForwardRef(Bootstrap(Button))>
              </ForwardRef(Bootstrap(ModalFooter))>
            </ForwardRef(Bootstrap(Modal))>,
          ],
          "className": "center",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <h1
                  style={
                    Object {
                      "color": "red",
                    }
                  }
                >
                  GoD
                </h1>,
                <h1
                  style={
                    Object {
                      "color": "white",
                    }
                  }
                >
                  | Game of Drones
                </h1>,
                <div
                  style={
                    Object {
                      "padding": 5,
                    }
                  }
                >
                  <SettingsButton
                    handleSettingsClick={[Function]}
                  />
                </div>,
              ],
              "className": "justify-content-center",
              "style": Object {
                "marginTop": 5,
              },
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "GoD",
                  "style": Object {
                    "color": "red",
                  },
                },
                "ref": null,
                "rendered": "GoD",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "| Game of Drones",
                  "style": Object {
                    "color": "white",
                  },
                },
                "ref": null,
                "rendered": "| Game of Drones",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <SettingsButton
                    handleSettingsClick={[Function]}
                  />,
                  "style": Object {
                    "padding": 5,
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "handleSettingsClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <h2
                style={
                  Object {
                    "color": "white",
                  }
                }
              >
                Welcome players
              </h2>,
              "className": "justify-content-center",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Welcome players",
                "style": Object {
                  "color": "white",
                },
              },
              "ref": null,
              "rendered": "Welcome players",
              "type": "h2",
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <h3
                style={
                  Object {
                    "color": "white",
                  }
                }
              >
                Enter Player's Names or choose one of the list
              </h3>,
              "className": "justify-content-center",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Enter Player's Names or choose one of the list",
                "style": Object {
                  "color": "white",
                },
              },
              "ref": null,
              "rendered": "Enter Player's Names or choose one of the list",
              "type": "h3",
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <NewUsers
                handleLoadUsers={[Function]}
                handleUserChange={[Function]}
                numOfPlayers={5}
                user1=""
                user2=""
              />,
              "className": "justify-content-center",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "handleLoadUsers": [Function],
                "handleUserChange": [Function],
                "numOfPlayers": 5,
                "user1": "",
                "user2": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef(Bootstrap(Button))
                onClick={[Function]}
              >
                Start Battle
              </ForwardRef(Bootstrap(Button))>,
              "className": "justify-content-center mt-2",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Start Battle",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Start Battle",
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
            },
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "centered": true,
              "children": Array [
                <ForwardRef(Bootstrap(ModalHeader))>
                  <ForwardRef(Bootstrap(ModalTitle))>
                    Undefined Players
                  </ForwardRef(Bootstrap(ModalTitle))>
                </ForwardRef(Bootstrap(ModalHeader))>,
                <ForwardRef(Bootstrap(ModalBody))>
                  Please fill out both player's names or check that they aren't the same.
                   
                </ForwardRef(Bootstrap(ModalBody))>,
                <ForwardRef(Bootstrap(ModalFooter))>
                  <ForwardRef(Bootstrap(Button))
                    onClick={[Function]}
                    variant="primary"
                  >
                    Ok
                  </ForwardRef(Bootstrap(Button))>
                </ForwardRef(Bootstrap(ModalFooter))>,
              ],
              "onHide": [Function],
              "show": false,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef(Bootstrap(ModalTitle))>
                    Undefined Players
                  </ForwardRef(Bootstrap(ModalTitle))>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Undefined Players",
                  },
                  "ref": null,
                  "rendered": "Undefined Players",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": undefined,
                    "propTypes": undefined,
                    "render": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": undefined,
                  "propTypes": undefined,
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    "Please fill out both player's names or check that they aren't the same.",
                    " ",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  "Please fill out both player's names or check that they aren't the same.",
                  " ",
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": undefined,
                  "propTypes": undefined,
                  "render": [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <ForwardRef(Bootstrap(Button))
                    onClick={[Function]}
                    variant="primary"
                  >
                    Ok
                  </ForwardRef(Bootstrap(Button))>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Ok",
                    "onClick": [Function],
                    "variant": "primary",
                  },
                  "ref": null,
                  "rendered": "Ok",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "defaultProps": undefined,
                    "propTypes": undefined,
                    "render": [Function],
                  },
                },
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "defaultProps": undefined,
                  "propTypes": undefined,
                  "render": [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "BACKDROP_TRANSITION_DURATION": 150,
              "Body": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
              "Dialog": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
              "Footer": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
              "Header": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
              "TRANSITION_DURATION": 300,
              "Title": Object {
                "$$typeof": Symbol(react.forward_ref),
                "defaultProps": undefined,
                "propTypes": undefined,
                "render": [Function],
              },
              "defaultProps": undefined,
              "propTypes": undefined,
              "render": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "defaultProps": undefined,
          "propTypes": undefined,
          "render": [Function],
        },
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
